
Однопоточный асинхронный язык программирования (асинхронный позволяет выполнять
несколько процессов одновременно, будем рассматривать в конце обучения)
Подключение JS инлайн через скрипт 
<script src='./'
async - 
defer - >

</script>

Виды переменных 
Объявление переменных:
var 
let const

Виды переменных:
let
1) string = 'JS'; //строка
2) number = 5; //число
3) bool = true; //булевое значение
4) n = null; // пустота, ячейка зарезервирована, но данные не присвоены;
5) a = undefined; // не определенно, что находится в этой ячейке,выскакивает в основном при ошибках в коде.
                   \/       \/      \/      \/

                        ПРОСТЫЕ ТИПЫ ДАННЫХ

6) let obj = { } объект

 const NAME = 'americano";
 let price =15;
 let curency = 'UAH';
 let milk = 'true';



let coffe = { 
     name:'Americano",
  // ключ:значение,
     price: 15,
     curency: 'UAH',
     milk:'true',
}

7) let b = Symbol ('a');  Symbol


метод typeof 5; проверяет тип данных;

let w=word+anotherWord;
console.log(w);
console.log(typeof w);

typeof типа данных null вернет object.Ошибка JS о которой нужно помнить.

alert выводит всплывающее окно;блоккирует выполнение JS кода пока не будет закрыт alert.
console.log показывает информацию в консоле браузера.

prompt - окошечко для ввода информации.

let answer = prompt ('Enter your name');
console.log (answer); знак равенства имеет самый низкий приоритет из знаков JS поэтому вначале выполняется 
функция, затем происходит присвоение переменной.

confirm метод которыйвыведет окошко с вопросом и двуями кнопочками да или нет.

let answer2 = confirm('Are you happy?');
console.log (answer2); возвращает true or false.

var x=5;
x=20;
console.log(x);

let y=20;
let y=30; выдает ошибку т.к. переменная y уже существует.

var y=20;
var y=30; перезапишет переменную y. 

let c=(a*b).toFixed(3); округляет число но превращает в строку.

a++ - увеличить на 1.
a+=3 - увеличить на 3 >>> a=a+3;
console.log(a++) - покажет переменную а, и  только затем увеличт на 1.
console.log(++a)-увеличит переменную а и затем покажет результат увеличенный на 1.

parseInt -  находит в строке числовое значение, строка должна начигаться с цифры,
 заканчивает свою работу если встречает символ или точку.

parseFloat - находит в строке числовое значение, включая с точкой и цифрами после неё, 
прекращает свою работу как только встречает первый символ.

        РЕСУРСЫ ДЛЯ ПРОГРАММИРОВАНИЯ
MDN,  - хороший веб ресурс о JS, HTML, CSS и др. на разных языках.
stackoverflow - хороший форум для разработчиков, на котором можно найти решение задач и задать вопрос.
w3school - веб ресурс.
learn javascript - веб ресурс но староват.
devdocs.io - сайт с документацией всех веб приложений, нжно знать, что ищешь.


NaN - not a number;
console.log(isNaN(5)); - возвращант true or false?
isNaN - Это не число.

length	свойство строки, вернет длину строки
toLowerCase() и toUpperCase()	вернут строку в соответствующем регистре
indexOf()	вернет позицию (индекс) на которой находится подстрока или -1, если ничего не найдено
includes()	один из наиболее часто используемых методов, в большинстве случаев заменяет indexOf, проверяет входит ли подстрока в строку, возвращает true или false


                        LESSON 2

== сравнивает только по значению переменных;
=== сравнивает по типу и по значению;       

При переводе в булевые операторы даёт FALSE
1) 0
2) ' ';
3) false;
4) NaN;
5) undefined;
6)null;
7)-0;

Сравнение не равно a != b; аналог a == b
                   a !== b; a === b
login.includes('login'); // true если есть обращаемся к массиву и проверяем есть ли в нем объект 'login';
!login.includes('login');//true если нет.

&& and - все условия проверки должны осуществиться, что бы выполнился код.Работает до первой false.
|| or - хотя бы одно условие выполняется, код выполняется,всегда останавливается на первом true.Работает до первого true.
                        CONTROL STRUCRURES
1) if else
2) циклы
3)функции.